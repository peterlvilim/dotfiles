[general]
ui = TTY.TTYUI
accounts = Peter Vilim, Andurilbearer, vilim1backup, delphix
fsync = False
pythonfile = ~/.password-store/.pwhelper.py

[Account PeterVilim]
localrepository = peterlvilim-Local
remoterepository = peterlvilim-Remote
status_backend = sqlite
postsynchook = notmuch new

[Repository peterlvilim-Local]
type = Maildir
localfolders = ~/.mail/peterlvilim
nametrans = lambda folder: {'drafts':  '[Gmail]/Drafts',
                            'sent':    '[Gmail]/Sent Mail',
                            'flagged': '[Gmail]/Starred',
                            'trash':   '[Gmail]/Trash',
                            'archive': '[Gmail]/All Mail',
                            }.get(folder, folder)

[Repository peterlvilim-Remote]
maxconnections = 1
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
type = Gmail
remoteuser = peterlvilim@gmail.com
remotepasseval = get_password("peterlvilim_mutt@gmail.com")
realdelete = no
nametrans = lambda folder: {'[Gmail]/Drafts':    'drafts',
                            '[Gmail]/Sent Mail': 'sent',
                            '[Gmail]/Starred':   'flagged',
                            '[Gmail]/Trash':     'trash',
                            '[Gmail]/All Mail':  'archive',
                            }.get(folder, folder)
folderfilter = lambda folder: folder not in ['[Gmail]/Trash',
                                             'Nagios',
                                             'Django',
                                             'Flask',
                                             '[Gmail]/Important',
                                             '[Gmail]/Spam',
                                             ]

[Account Andurilbearer]
localrepository = andurilbearer-Local
remoterepository = andurilbearer-Remote
status_backend = sqlite
postsynchook = notmuch new

[Repository andurilbearer-Local]
type = Maildir
localfolders = ~/.mail/andurilbearer
nametrans = lambda folder: {'drafts':  '[Gmail]/Drafts',
                            'sent':    '[Gmail]/Sent Mail',
                            'flagged': '[Gmail]/Starred',
                            'trash':   '[Gmail]/Trash',
                            'archive': '[Gmail]/All Mail',
                            }.get(folder, folder)

[Repository andurilbearer-Remote]
maxconnections = 1
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
type = Gmail
remoteuser = andurilbearer@gmail.com
remotepasseval = get_password("andurilbearer@gmail.com")
realdelete = no
nametrans = lambda folder: {'[Gmail]/Drafts':    'drafts',
                            '[Gmail]/Sent Mail': 'sent',
                            '[Gmail]/Starred':   'flagged',
                            '[Gmail]/Trash':     'trash',
                            '[Gmail]/All Mail':  'archive',
                            }.get(folder, folder)
folderfilter = lambda folder: folder not in ['[Gmail]/Trash',
                                             'Nagios',
                                             'Django',
                                             'Flask',
                                             '[Gmail]/Important',
                                             '[Gmail]/Spam',
                                             ]

[Account vilim1backup]
localrepository = vilim1backup-Local
remoterepository = vilim1backup-Remote
status_backend = sqlite
postsynchook = notmuch new

[Repository vilim1backup-Local]
type = Maildir
localfolders = ~/.mail/vilim1backup
nametrans = lambda folder: {'drafts':  '[Gmail]/Drafts',
                            'sent':    '[Gmail]/Sent Mail',
                            'flagged': '[Gmail]/Starred',
                            'trash':   '[Gmail]/Trash',
                            'archive': '[Gmail]/All Mail',
                            }.get(folder, folder)

[Repository vilim1backup-Remote]
maxconnections = 1
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
type = Gmail
remoteuser = vilim1backup@gmail.com
remotepasseval = get_password("vilim1backup@gmail.com")
realdelete = no
nametrans = lambda folder: {'[Gmail]/Drafts':    'drafts',
                            '[Gmail]/Sent Mail': 'sent',
                            '[Gmail]/Starred':   'flagged',
                            '[Gmail]/Trash':     'trash',
                            '[Gmail]/All Mail':  'archive',
                            }.get(folder, folder)
folderfilter = lambda folder: folder not in ['[Gmail]/Trash',
                                             'Nagios',
                                             'Django',
                                             'Flask',
                                             '[Gmail]/Important',
                                             '[Gmail]/Spam',
                                             ]

[Account delphix]
localrepository = delphix-Local
remoterepository = delphix-Remote
status_backend = sqlite
postsynchook = notmuch new

[Repository delphix-Local]
type = Maildir
localfolders = ~/.mail/delphix
nametrans = lambda folder: {'drafts':  '[Gmail]/Drafts',
                            'sent':    '[Gmail]/Sent Mail',
                            'flagged': '[Gmail]/Starred',
                            'trash':   '[Gmail]/Trash',
                            'archive': '[Gmail]/All Mail',
                            }.get(folder, folder)

[Repository delphix-Remote]
maxconnections = 1
sslcacertfile = /etc/ssl/certs/ca-certificates.crt
type = Gmail
remoteuser = peter.vilim@delphix.com
remotepasseval = get_password("peter.vilim@delphix.com")
realdelete = no
nametrans = lambda folder: {'[Gmail]/Drafts':    'drafts',
                            '[Gmail]/Sent Mail': 'sent',
                            '[Gmail]/Starred':   'flagged',
                            '[Gmail]/Trash':     'trash',
                            '[Gmail]/All Mail':  'archive',
                            }.get(folder, folder)
folderfilter = lambda folder: folder not in ['[Gmail]/Trash',
                                             'Nagios',
                                             'Django',
                                             'Flask',
                                             '[Gmail]/Important',
                                             '[Gmail]/Spam',
                                             ]

[notifications]
summary = {account} - {h[subject]}
