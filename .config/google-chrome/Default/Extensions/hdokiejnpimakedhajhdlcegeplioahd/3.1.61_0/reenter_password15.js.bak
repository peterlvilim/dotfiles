
if(document.getElementById('createanaccount')) document.getElementById('createanaccount').innerText = gs('Create Account');
if(document.getElementById('cancel')) document.getElementById('cancel').innerText = gs('Cancel');



function onLoad(bg_loaded)
{
  if (!bg_loaded) {
    get_data('reenter_password', function() { onLoad(true); });
    return;
  }
}

var dobeforeunload = true;
var docleardata = true;
var newdata;
function do_submit()
{
  dobeforeunload = false;

  var pwconfirm = document.getElementById("reenterpassword").value;
  var password = getBG().g_create_account_data['masterpassword'];
  if(pwconfirm!=password){
    alert(gs("The LastPass master password you reentered does not match"));
    docleardata = false;
    redirect_to_url('create_account.html');
  } else {
    document.getElementById('createanaccount').disabled = true;
    document.getElementById('cancel').disabled = true;
    document.getElementById('creatingaccount').style.display = 'block';
    setInterval(function() { move_password_meter(); }, 10);
    createAccount();
  }
}

var currstrength = 0;
function move_password_meter()
{
  if (++currstrength > 100) {
    currstrength = 0;
  }
  update_password_meter_manual(currstrength, document);
}

//This is modified by the build script to help us identify where signups are coming from
var createextra = "";

function createAccount(master_password_changed){
  if (getBG().LPISLOC) {
    if (!master_password_changed) {
      document.getElementById('creatingaccounttext').innerHTML = gs('Reencrypting Data...');
      var newusername = fix_username(getBG().g_create_account_data['email']);
      var newpassword = getBG().g_create_account_data['masterpassword'];
      getBG().change_master_password(newusername, newpassword, true, function(data) { newdata = data; createAccount(true); });
      return;
    } else {
      if (typeof(newdata) != 'string' || newdata.length < 4 || newdata.substring(0, 4) != 'LPAV') {
        showCreateErrorAndBackup(gs('An error occurred while re-encrypting your data'));
        return;
      }
    }
  }

  document.getElementById('creatingaccounttext').innerHTML = gs('Creating Account...');

  var email = getBG().g_create_account_data['email'].toLowerCase().replace(/\s*/g, '');
  var password = getBG().g_create_account_data['masterpassword'];
  getBG().make_lp_key_hash_iterations(email, password, get_key_iterations(email), function(key, hash)
  {
    var improve = getBG().g_create_account_data['improve'];
    var loglogins = getBG().g_create_account_data['history'];
    var timezone = getBG().g_create_account_data['timezone'];
    var passwordhint = getBG().g_create_account_data['passwordreminder'];

    var postdata = "username="+getBG().en(email)+
                   "&email="+getBG().en(email)+
                   "&hash="+getBG().en(hash)+
                   "&password_hint="+getBG().en(passwordhint)+
                   (improve ? "&improve=1" : "") +
                   (loglogins ? "&loglogins=1" : "") +
                   "&timezone2="+getBG().en(timezone)+
                   "&iterations="+getBG().en(get_key_iterations(email))+
                   "&xml=1" +
                   "&language2=en-US" +
                   createextra;
    if (getBG().LPISLOC && getBG().LPISUPEK) {
      postdata += '&singlefactortype=vtapi';
    }

    getBG().lpMakeRequest(getBG().base_url+"create_account.php", postdata, lpCreateAccountResponse, lpcreateaccounterror);
  });
}

function upload_data()
{
  document.getElementById('creatingaccounttext').innerHTML = gs('Uploading Data...');
  var newusername = fix_username(getBG().g_create_account_data['email']);
  var newpassword = getBG().g_create_account_data['masterpassword'];
  getBG().make_lp_key_hash_iterations(newusername, newpassword, get_key_iterations(newusername), function(key, hash)
  {
    var postdata = 'wxusername=' + encodeURIComponent(newusername) + '&wxhash=' + encodeURIComponent(hash) + '&data=' + encodeURIComponent(btoa(newdata));
    getBG().lpMakeRequest(getBG().base_url+"import_local.php", postdata, lpUploadDataResponse, lpuploaddataerror);
  });
}

function lpCreateAccountResponse(req){
  if  (req.readyState==4 && req.status==200 && req.responseText)
  {
    var responsetext = req.responseText;

    var error = "";
    if(responsetext.indexOf("ok") >= 0){
      if (getBG().LPISLOC) {
        upload_data();
      } else {
        getBG().LP_do_login(getBG().g_create_account_data['email'], getBG().g_create_account_data['masterpassword'], true, false);
//        redirect_to_url((g_ischrome && getBG().have_binary() && (getBG().g_is_win || getBG().g_is_mac || getBG().g_is_linux)) ? 'import_your_data.html' : 'configure_formfill.html');
        redirect_to_url('homelocal2.html');
      }
      return;
    }else if(responsetext.indexOf("usernametaken") >= 0){
      error = gs("Email already in use, have you forgotten your password?");
    }else if(responsetext.indexOf("usernameinvalid") >= 0 || responsetext.indexOf("emailfailed") >= 0){
      error = gs("Invalid email address, try again")
    }else{
      //Not exactly sure what happened!
      error = gs("A server error occurred while processing your request.");
    }

    //Show error and then go back to create page
    if(error != ""){
      showCreateErrorAndBackup(error);
    }

  }
}

function showCreateErrorAndBackup(error){
  alert(error);
  docleardata = false;
  redirect_to_url('create_account.html');
}

function lpcreateaccounterror(reason,aA,isqueueable,e)
{
  showCreateErrorAndBackup(gs("A server error occurred while processing your request."));
}

function lpUploadDataResponse(req)
{
  if (req.readyState==4) {
    if (req.status==200 && req.responseText && req.responseText.indexOf("ok") >= 0) {
      if (getBG().LPISUPEK) {
        getBG().lpvt_store_data_and_setsinglefactortype(encodeURIComponent(fix_username(getBG().g_create_account_data['email'])) + '|' + encodeURIComponent(getBG().g_create_account_data['masterpassword']));
      }
      getBG().delete_file('LPISLOC');
      redirect_to_url('congratulations.html');
    } else {
      lpuploaddataerror();
    }
  }
}

function lpuploaddataerror(reason,aA,isqueueable,e)
{
  if (confirm(gs('An error occurred while uploading your data.  Would you like to retry?'))) {
    upload_data();
  }
}

document.getElementById('reenterpassword').focus();
